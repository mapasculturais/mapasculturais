x-defaults: &defaults
  environment: &environment
    PORT: ${PORT}
    APP_MODE: ${APP_MODE}
    APP_ENV: ${APP_ENV}
    XDEBUG_MODE: ${XDEBUG_MODE}
    DB_HOST: ${DB_HOST}
    PWA_UPSTREAM: ${PWA_UPSTREAM}
    SERVER_NAME: ${SERVER_NAME}
    TRUSTED_PROXIES: ${TRUSTED_PROXIES}
    TRUSTED_HOSTS: ${TRUSTED_HOSTS}
    DATABASE_URL: ${DATABASE_URL}
    BUILD_ASSETS: ${BUILD_ASSETS}
    PENDING_PCACHE_RECREATION_INTERVAL: ${PENDING_PCACHE_RECREATION_INTERVAL}
    JOBS_INTERVAL: ${JOBS_INTERVAL}
    # REDIS_CACHE: ${REDIS_CACHE}
    MAILER_TRANSPORT: ${MAILER_TRANSPORT}
    MAILER_FROM: ${MAILER_FROM}
    NUM_PROCESSES: ${NUM_PROCESSES}
    MC_UPDATES_PROCESSES: ${MC_UPDATES_PROCESSES}
    GOOGLE_RECAPTCHA_SITEKEY: ${GOOGLE_RECAPTCHA_SITEKEY}
    GOOGLE_RECAPTCHA_SECRET: ${GOOGLE_RECAPTCHA_SECRET}
    SESSIONS_SAVE_PATH: ${SESSIONS_SAVE_PATH}
    # APP_RUNTIME: ${APP_RUNTIME}
    NIXPACKS_PHP_ROOT_DIR: ${NIXPACKS_PHP_ROOT_DIR}
    NIXPACKS_PHP_FALLBACK_PATH: ${NIXPACKS_PHP_FALLBACK_PATH}
    ACTIVE_THEME: 'MapasCulturais\Themes\BaseV2'
    
    SITE_NAME: ${SITE_NAME}
    SITE_DESCRIPTION: ${SITE_DESCRIPTION}
    LOGO_TITLE: ${LOGO_TITLE}
    LOGO_SUBTITLE: ${LOGO_SUBTITLE}
    LOGO_IMAGE: ${LOGO_IMAGE}
    AUTH_EMAIL_IMAGE: ${AUTH_EMAIL_IMAGE}
    AUTH_LOGIN_ON_REGISTER: ${AUTH_LOGIN_ON_REGISTER}
    STATUS_CREATE_AGENT: ${STATUS_CREATE_AGENT}
    AUTH_LOGIN_BY_CPF: ${AUTH_LOGIN_BY_CPF}

services:

  web:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    build:
      context: .
      dockerfile: .nixpacks/Dockerfile
    restart: '${DOCKER_RESTART_POLICY:-always}'
    depends_on:
      - database
      - redis
      - mailhog
    environment:
      <<: *environment
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/
    ports:
      - 80
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
    #   interval: 30s       # Intervalo entre as verificações de saúde
    #   timeout: 10s        # Tempo limite para cada verificação
    #   retries: 3          # Número de tentativas antes de marcar como falha
    #   start_period: 5s    # Período de inicialização antes de começar as verificações

  database:
    image: kartoza/postgis:14
    restart: '${DOCKER_RESTART_POLICY:-always}'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      DATADIR: ${DATADIR}
    volumes:
      - db_data:/opt/postgres/data
      - ./dev/db:/docker-entrypoint-initdb.d
    ports:
      - 5432
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASSWORD} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"

  crontab:
    image: rancher/container-crontab:v0.5.0
    restart: '${DOCKER_RESTART_POLICY:-always}'
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  redis:
    image: redis:6
    restart: '${DOCKER_RESTART_POLICY:-always}'
    command: --maxmemory 128Mb --maxmemory-policy allkeys-lru
    volumes:
      - redis:/data
    ports:
      - 6379

  mailhog:
    image: mailhog/mailhog
    restart: '${DOCKER_RESTART_POLICY:-always}'
    ports:
      - 8025

  recreate-pending-pcache:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    build:
      context: .
      dockerfile: .nixpacks/Dockerfile
    restart: '${DOCKER_RESTART_POLICY:-always}'
    depends_on:
      - database
    environment:
      <<: *environment
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/
    command: ./docker/recreate-pending-pcache-cron.sh
    # labels:
    #   - "cron.schedule=*/5 * * * * *"

  execute-job:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    build:
      context: .
      dockerfile: .nixpacks/Dockerfile
    restart: '${DOCKER_RESTART_POLICY:-always}'
    depends_on:
      - database
    environment:
      <<: *environment
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/
    command: ./docker/jobs-cron.sh
    # labels:
    #   - "cron.schedule=*/5 * * * * *"

  db-update:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    command: ./scripts/db-update.sh -d localhost
    build:
      context: .
      dockerfile: .nixpacks/Dockerfile
    restart: '${DOCKER_RESTART_POLICY:-no}'
    depends_on:
      - database
    environment:
      <<: *environment
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/

  mc-db-updates:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    command: ./scripts/mc-db-updates.sh
    build:
      context: .
      dockerfile: .nixpacks/Dockerfile
    restart: '${DOCKER_RESTART_POLICY:-no}'
    depends_on:
      - database
    environment:
      <<: *environment
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/

  doctrine-orm:
    <<: *defaults
    image: ghcr.io/redemapas/mapas
    command: php ./src/tools/doctrine.php orm:generate-proxies
    environment:
      <<: *environment
    depends_on:
      - database
    volumes:
      - var-files:/app/var/
      - assets-files:/app/public/assets
      - user-public-files:/app/public/files/
      - sessions-files:/app/var/sessions/
      - doctrine-files:/app/var/DoctrineProxies/

  # doctrine-migrate:
  #   <<: *defaults
  #   image: ghcr.io/redemapas/mapas
  #   command: php app/bin/doctrine migrations:migrate --no-interaction --all-or-nothing
  #   environment:
  #     <<: *environment
  #   depends_on:
  #     - db-update
  #   volumes:
  #     - var-files:/app/var/private-files

  # pwa:
  #   image: redemapas/mapas-pwa
  #   build:
  #     context: ./pwa
  #     target: dev
  #   volumes:
  #     - ./pwa:/srv/app
  #   environment:
  #     API_PLATFORM_CREATE_CLIENT_ENTRYPOINT: http://php
  #     API_PLATFORM_CREATE_CLIENT_OUTPUT: .
  #     NEXT_PUBLIC_ENTRYPOINT: http://php

  # sessions:
  #   image: redis:6
  #   restart: unless-stopped
  #   command: --maxmemory 128Mb --maxmemory-policy allkeys-lru
  #   volumes:
  #     - sessions:/data
  #   ports:
  #     - 6379

#   command: php -S 0.0.0.0:80 -q -t /app/public /app/router.php
  # web-dev:
  #   image: ghcr.io/redemapas/mapas-php
  #   build: 
  #     context: .
  #   restart: no
  #   depends_on:
  #     - database
  #   environment:
  #     <<: *environment
  #     CACHE_ASSETS_URL: 'false'
  #   ports:
  #     - 4242:80
  #   volumes:
  #     - ./:/app
  #     - var-files:/app/var/
  #     - assets-files:/app/public/assets
  #     - user-public-files:/app/public/files/
  #     - sessions-files:/app/var/sessions/
  #     - doctrine-files:/app/var/DoctrineProxies/
  #   command: sleep 10000

  # pgadmin:
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin
  #   ports:
  #     - 80

volumes:
  var-files:
  db_data:
  sessions:
  redis:
  pgadmin:
  user-public-files:
  assets-files:
  sessions-files:
  doctrine-files:
