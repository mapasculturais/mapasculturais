name: Testing

on:
  push:
    branches:
      - "master"
      - "develop"
  pull_request:
    branches:
      - "develop"

jobs:
  php:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2']
    runs-on: ${{ matrix.operating-system }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Composer Install
        run: docker run --rm -v $PWD:/app composer:latest install
      - 
        name: Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2' # the full version of `docker-compose` command
      - run: docker compose up -d
      - 
        name: Database Migrations
        run: sleep 5 && docker compose run --rm migrations
      - 
        name: Phpunit Coverage
        run: docker compose exec backend ./vendor/bin/phpunit --coverage-text
      # - 
      #   name: deploy to cluster
      #   uses: steebchen/kubectl@v2.0.0
      #   with: # defaults to latest kubectl binary version
      #     config: ${{ secrets.KUBE_CONFIG_DATA }}
      #     command: set image --record deployment/mapasculturais -nredelivre-mapas-dev container=${{ github.repository }}:${{ github.sha }}

      # Docs: https://github.com/shivammathur/setup-php
      # - 
      #   name: Setup PHP
      #   uses: shivammathur/setup-php@v2
      #   with:
      #     php-version: ${{ matrix.php-versions }}
      #     extensions: mbstring, dom, pdo_pgsql, gd, intl, zip, opcache, xml, curl, iconv, xmlwriter, simplexml
      #     coverage: none # xdebug
      #     tools: composer
      # -
      #   name: Get composer cache directory
      #   id: composer-cache
      #   run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      # -
      #   name: Cache composer dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.composer-cache.outputs.dir }}
      #     # Use composer.json for key, if composer.lock is not committed.
      #     # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
      #     key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      #     restore-keys: ${{ runner.os }}-composer-
      # -
      #   name: Install dependencies
      #   run: composer install --no-progress --prefer-dist --optimize-autoloader
      # - 
      #   name: Add hosts to /etc/hosts
      #   run: |
      #     sudo echo "127.0.0.1 db redis" | sudo tee -a /etc/hosts
      # - 
      #   name: Docker compose up
      #   uses: isbang/compose-action@v1.5.1
        # with:
        #   compose-file: "./docker-compose.yml"
        #   down-flags: "--volumes"
          # services: |
          #   db
          #   redis
          #   migrations
      # -
      #   name: Test with phpunit
      #   run: docker compose exec backend ls ./vendor/
      # -
      #   name: Test with phpunit
      #   run: docker compose exec backend ./vendor/bin/phpunit --coverage-text
